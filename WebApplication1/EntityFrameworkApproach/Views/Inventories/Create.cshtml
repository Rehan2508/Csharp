@model DAL.Models.Inventory

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="~/Scripts/jquery-3.4.1.min.js"></script> @*or google cdn*@
<script>
    $(document).ready(function () {
        var url = '@Url.Action("FilterProducts")';   //the method we have to call
        var products = $("#pid");

        //to select the list inside the drop[down list]
        products.empty();
        products.append($('<option></option>').text("Select").val("Select"));

        /*normal html dropdown list
         <Select>
         <option value ="India">India</option>
         <option value = "Japan">Japan</option>
         </Select>
         */

        $("#categId").change(function () {
            var categID = $(this).val();    //secelect the current category selected

            products.empty();
            products.append($('<option></option>').text("Select").val("Select"));

            $.getJSON(url, { id: categID }, function (response) {   //this categID should be the same name as the one passed to the method FilterProducts
                //$("#prod").text(response);
                $.each(response, function (i, e) {   // i : index,   e : value
                    products.append($('<option></option>').text(e.name).val(e.id)); //filling the values of products in dropdown list    
                })
            })
        })
    })
</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Inventory</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.categId, "categId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("categId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.categId, "", new { @class = "text-danger" })
            <p id="prod"></p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pid, "pid", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("pid", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.pid, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.qty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.qty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.qty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
